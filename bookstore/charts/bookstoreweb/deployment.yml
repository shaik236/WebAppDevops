apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  labels:
    app: bookstore
spec:
  replicas: 3
  selector:
    matchLabels:
      service: webapp
  template:
    metadata:
      labels:
        app: bookstore
        service: webapp
    spec:
      containers:
        - name: webapp
          image: testavo.azurecr.io/bookstore_web:v1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
           {{ range $k, $v := .Values.env }}
              - name: {{ $k | quote }}
                value: {{ $v | quote }}
            {{- end }}
          startupProbe:
              httpGet:
                path: /health/startup
                port: 80
              failureThreshold: 30
              periodSeconds: 10
          livenessProbe:
              httpGet:
                path: /healthz
                port: 80
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readinessProbe:
              httpGet:
                path: /ready
                port: 80
              successThreshold: 3
           
---
apiVersion: v1
kind: Service
metadata:
  name: webapp
  labels:
    app: bookstore
    service: webapp
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    service: webapp
    
# db-deployment    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: Stores-db
spec:
  selector:
    matchLabels:
      app: Stores-db
  replicas: 1
  template:
    metadata:
      labels:
        app: Stores-db
    spec:
      containers:
        - name: Stores-db
          image: postgres:13
          ports:
            - containerPort: 5432
              name: "postgres"
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                name: postgres-config
                key: POSTGRES_DB
            - name: POSTGRES_USER
              configMapKeyRef:
                name: postgres-config
                key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              configMapKeyRef:
                name: postgres-config
                key: POSTGRES_PASSWORD
          resources:
            limits:
              memory: 4Gi
              cpu: "2"
              
configMapGenerator:
  - name: postgres-config
  literals:
    - POSTGRES_DB=Stores
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=tiger123